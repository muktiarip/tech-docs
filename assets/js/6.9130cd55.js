(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"armbian"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#armbian"}},[t._v("#")]),t._v(" Armbian")]),t._v(" "),s("h2",{attrs:{id:"general"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[t._v("#")]),t._v(" General")]),t._v(" "),s("h3",{attrs:{id:"copy-sd-card-without-dd-of-all-image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copy-sd-card-without-dd-of-all-image"}},[t._v("#")]),t._v(" Copy SD Card (without "),s("code",[t._v("dd")]),t._v(" of all image)")]),t._v(" "),s("p",[t._v("Assuming "),s("code",[t._v("/dev/sdb")]),t._v(" is SD card device node in PC")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("dd if=Armbian.img of=/dev/sdb bs=1k count=1023")]),t._v(" -> copy boot sector")]),t._v(" "),s("li",[t._v("format "),s("code",[t._v("/dev/sdb1")]),t._v(" to "),s("code",[t._v("ext4")]),t._v(".")]),t._v(" "),s("li",[t._v("copy files from Armbian.img to "),s("code",[t._v("/dev/sdb1")]),t._v(" (use "),s("code",[t._v("losetup")]),t._v(" utility to mount it)")]),t._v(" "),s("li",[t._v("edit "),s("code",[t._v("/boot/armbianEnv.txt")]),t._v(", set "),s("code",[t._v("rootdev")]),t._v(" to "),s("code",[t._v("/dev/mmcblk0p1")])]),t._v(" "),s("li",[t._v("edit "),s("code",[t._v("/etc/fstab")]),t._v(", set root partition to "),s("code",[t._v("/dev/mmcblk0p1")])])]),t._v(" "),s("p",[t._v("In: "),s("code",[t._v("/boot/armbian_first_run.txt")]),t._v(" set IP address of "),s("code",[t._v("eth0")]),t._v(" to "),s("code",[t._v("static")]),t._v(".\nUse SSH access to this IP address.")]),t._v(" "),s("p",[s("code",[t._v("root:1234")])]),t._v(" "),s("h2",{attrs:{id:"overlay-file-system"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overlay-file-system"}},[t._v("#")]),t._v(" Overlay File System")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# /etc/overlayroot.conf\noverlayroot_cfgdisk="disabled"\noverlayroot="tmpfs:recurse=0"\n')])])]),s("h2",{attrs:{id:"read-only-armbian"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#read-only-armbian"}},[t._v("#")]),t._v(" Read-Only Armbian")]),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("virtual read only")]),t._v(". On Armbian with recent kernel:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" overlayroot\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'overlayroot=\"tmpfs\"'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/overlayroot.conf\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n")])])]),s("p",[t._v("After reboot you can't make any permanent changes unless you use it within:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("overlayroot-chroot\n")])])]),s("p",[t._v("Overlay is done (with current settings) to RAM which is very fast but small. You can have overlay on any other device.")]),t._v(" "),s("h3",{attrs:{id:"alternative-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#alternative-1"}},[t._v("#")]),t._v(" Alternative #1")]),t._v(" "),s("p",[t._v("you can use unionfs-fuse, available on debian, that do the same stuff. I'm using it right now on several boards. You have to search on google how to conf it, but basically you need to unite the static and read-only /etc and /var with a temporary rw /etc /var that is mounted as tempfs file system. unionfs do that for you if you configure /usr/local/bin/mount_unionfs with:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[ -z \""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('" ] && exit 1 || DIR='),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ROOT_MOUNT=$(grep -v \"^#\" /etc/fstab | awk '\"'\"'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('=="/" {print substr('),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")]),t._v(",1,2)}'")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\'"')]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if [ \""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ROOT_MOUNT")]),t._v('" != "ro" ]; then\'')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bin/mount --bind "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("_org "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'else'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bin/mount -t tmpfs ramdisk "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("_rw'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/bin/unionfs-fuse -o cow,allow_other,suid,dev,nonempty "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("_rw=RW:"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("_org=RO "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DIR}")]),t._v("'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fi'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/local/bin/mount_unionfs\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/mount_unionfs\n")])])]),s("p",[t._v("and then switch to ro the partitions and add on fstab")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mount_unionfs /etc fuse defaults "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nmount_unionfs /var fuse defaults "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("p",[t._v("before it you need to create those 2 direcories and copy the static /etc and /var on them, you can do that by:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -al /etc /etc_org\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" /var /var_org\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /etc_rw\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /var /var_rw\n")])])]),s("h3",{attrs:{id:"solution-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-2"}},[t._v("#")]),t._v(" Solution #2")]),t._v(" "),s("p",[t._v("Solution for overlayroot in Armbian Jessie:")]),t._v(" "),s("ol",[s("li",[t._v("install "),s("code",[t._v("overlayroot_0.27ubuntu1.4_all.deb")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("dpkg -i overlayroot_0.27ubuntu1.4_all.deb\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("add following lines to /usr/share/initramfs-tools/hooks/overlayroot file:")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("copy_exec /bin/grep /bin\ncopy_exec /usr/bin/stat /bin\ncopy_exec /bin/echo /bin\n")])])]),s("p",[t._v("This will load missing tools required by /usr/share/initramfs-tools/scripts/init-bottom/overlayroot script.")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v('replace all "mount --move" with "mount -o move" in /usr/share/initramfs-tools/scripts/init-bottom/overlayroot file.')])]),t._v(" "),s("li",[s("p",[t._v("update-initramfs -u")])])]),t._v(" "),s("h3",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/lauhub/debian-to-readonly",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link #1"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://wiki.debian.org/ReadonlyRoot",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link #2"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://bykting.wordpress.com/tag/raspberry-sd-card-read-only-root-file-system/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link #3"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://help.ubuntu.com/community/aufsRootFileSystemOnUsbFlash",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link #4"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Overlay_filesystem",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link #5"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"manual-armbian-flashing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manual-armbian-flashing"}},[t._v("#")]),t._v(" Manual Armbian Flashing")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Armbian_5.65_Orangepizero_Ubuntu_bionic_next_4.14.78.img "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/dev/mmcblk0 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1k "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1023")]),t._v("\n")])])]),s("p",[t._v("Format "),s("code",[t._v("/dev/mmcblk0p1")]),t._v(" to ext4 file system")]),t._v(" "),s("p",[s("code",[t._v("fdisk -l Armbian_5.65_Orangepizero_Ubuntu_bionic_next_4.14.78.img")])]),t._v(" "),s("p",[t._v("Note first partition offset in the Armbian image file")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" losetup "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  /dev/loop0 Armbian_5.65_Orangepizero_Ubuntu_bionic_next_4.14.78.img "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -o "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$((")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8192")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("))")])]),t._v("\n")])])]),s("p",[t._v("Mount "),s("code",[t._v("/dev/loop0")])]),t._v(" "),s("p",[t._v("Copy all files from mounted "),s("code",[t._v("/dev/loop0")]),t._v(" to "),s("code",[t._v("/dev/mmcblk0p1")])]),t._v(" "),s("p",[t._v("In "),s("code",[t._v("/dev/mmcblk0p1")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("Edit "),s("code",[t._v("/boot/armbianEnv.txt")]),t._v(", set root to "),s("code",[t._v("/dev/mmcblk0p1")])]),t._v(" "),s("li",[t._v("Edit "),s("code",[t._v("/etc/fstab")]),t._v(", seto root to "),s("code",[t._v("/dev/mmcblk0p1")])])]),t._v(" "),s("p",[t._v("Boot OrangePi Zero. Find its IP address.")]),t._v(" "),s("p",[t._v("Using ssh, connect to OrangePi Zero using username=root and password=1234")]),t._v(" "),s("p",[t._v("Changer root password immediately.")]),t._v(" "),s("p",[t._v("Run "),s("code",[t._v("armbian-config")]),t._v(" to customize timezone, keyboard, language, etc.")]),t._v(" "),s("p",[t._v("To activate SPI add following lines to the /boot/armbianEnv.txt")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("overlays=spi-spidev\nparam_spidev_spi_bus=1\n")])])]),s("p",[t._v("To activate PWM,  add following lines to the /boot/armbianEnv.txt\n"),s("code",[t._v("overlays=pwm")])]),t._v(" "),s("h2",{attrs:{id:"using-pwm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-pwm"}},[t._v("#")]),t._v(" Using PWM")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("cd /sys/class/pwm/pwmchip0")])]),t._v(" "),s("li",[s("code",[t._v("echo 0 | sudo tee export")]),t._v(" to export PWM0 sysfs file.")]),t._v(" "),s("li",[s("code",[t._v("echo normal | sudo tee polarity")]),t._v(" to set PWM polarity to normal.")]),t._v(" "),s("li",[s("code",[t._v("echo 1000000000 | sudo tee period")]),t._v(" to set PWM period.")]),t._v(" "),s("li",[s("code",[t._v("echo 100000000 | sudo tee duty_cycle")]),t._v(" to set duty cycle.")]),t._v(" "),s("li",[s("code",[t._v("echo 1 | sudo tee enable")]),t._v(" to start PWM toggling.")]),t._v(" "),s("li",[s("code",[t._v("echo 0 | sudo tee enable")]),t._v(" to stop PWM toggling.")])]),t._v(" "),s("h2",{attrs:{id:"links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" Links")]),t._v(" "),s("ul",[s("li",[t._v("http://esp8266-server.de/OrangePi/")])]),t._v(" "),s("h2",{attrs:{id:"orange-pi-zero-pwm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#orange-pi-zero-pwm"}},[t._v("#")]),t._v(" Orange Pi Zero PWM")]),t._v(" "),s("p",[t._v("When stopping PWM but LED is HIGH, then set POLARITY to INVERSED.")]),t._v(" "),s("h2",{attrs:{id:"writing-the-u-boot-files-to-sd-card"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writing-the-u-boot-files-to-sd-card"}},[t._v("#")]),t._v(" Writing the u-boot files to SD Card")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/share/u-boot/u-boot-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("portname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/sunxi-spl.bin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/dev/sd_card_device "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("seek")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/share/u-boot/u-boot-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("portname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/u-boot.img "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("conv")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("notrunc,sync "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/dev/sd_card_device "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("seek")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);